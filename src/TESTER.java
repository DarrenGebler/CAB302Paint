//======================================================
// Source code generated by jvider v1.8.1 UNREGISTERED version.
// http://www.jvider.com/
//======================================================
import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

/**
 * @author  Administrator
 * @created May 15, 2019
 */
public class TESTER extends JFrame
{
    static TESTER theTESTER;

    JPanel pnPanel0;
    JButton btLineBtn;
    JButton btPlotBtn;
    JButton btRectBtn;
    JButton btEllipseBtn;
    JButton btPolygonBtn;
    JComboBox cmbColourCmbo;
    JTextField tfHexText;

    JPanel jf;

    JPanel pnCanvasPanel;

    int clicks = 0;
    int x1 =0;
    int x2 = 0;
    int y1 = 0;
    int y2 = 0;
    Graphics g;
    /**
     */
    public static void main( String args[] )
    {
        try
        {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch ( ClassNotFoundException e )
        {
        }
        catch ( InstantiationException e )
        {
        }
        catch ( IllegalAccessException e )
        {
        }
        catch ( UnsupportedLookAndFeelException e )
        {
        }
        theTESTER = new TESTER();
    }

    /**
     */
    public TESTER()
    {
        super( "TITLE" );

        pnPanel0 = new JPanel();
        GridBagLayout gbPanel0 = new GridBagLayout();
        GridBagConstraints gbcPanel0 = new GridBagConstraints();
        pnPanel0.setLayout( gbPanel0 );

        btLineBtn = new JButton( "Line"  );
        gbcPanel0.gridx = 0;
        gbcPanel0.gridy = 0;
        gbcPanel0.gridwidth = 4;
        gbcPanel0.gridheight = 1;
        gbcPanel0.fill = GridBagConstraints.BOTH;
        gbcPanel0.weightx = 1;
        gbcPanel0.weighty = 0;
        gbcPanel0.anchor = GridBagConstraints.NORTH;
        gbPanel0.setConstraints( btLineBtn, gbcPanel0 );
        pnPanel0.add( btLineBtn );

        btPlotBtn = new JButton( "Plot"  );
        gbcPanel0.gridx = 4;
        gbcPanel0.gridy = 0;
        gbcPanel0.gridwidth = 4;
        gbcPanel0.gridheight = 1;
        gbcPanel0.fill = GridBagConstraints.BOTH;
        gbcPanel0.weightx = 1;
        gbcPanel0.weighty = 0;
        gbcPanel0.anchor = GridBagConstraints.NORTH;
        gbPanel0.setConstraints( btPlotBtn, gbcPanel0 );
        pnPanel0.add( btPlotBtn );

        btRectBtn = new JButton( "Rectangle"  );
        gbcPanel0.gridx = 8;
        gbcPanel0.gridy = 0;
        gbcPanel0.gridwidth = 4;
        gbcPanel0.gridheight = 1;
        gbcPanel0.fill = GridBagConstraints.BOTH;
        gbcPanel0.weightx = 1;
        gbcPanel0.weighty = 0;
        gbcPanel0.anchor = GridBagConstraints.NORTH;
        gbPanel0.setConstraints( btRectBtn, gbcPanel0 );
        pnPanel0.add( btRectBtn );

        btEllipseBtn = new JButton( "Ellipse"  );
        gbcPanel0.gridx = 12;
        gbcPanel0.gridy = 0;
        gbcPanel0.gridwidth = 4;
        gbcPanel0.gridheight = 1;
        gbcPanel0.fill = GridBagConstraints.BOTH;
        gbcPanel0.weightx = 1;
        gbcPanel0.weighty = 0;
        gbcPanel0.anchor = GridBagConstraints.NORTH;
        gbPanel0.setConstraints( btEllipseBtn, gbcPanel0 );
        pnPanel0.add( btEllipseBtn );

        btPolygonBtn = new JButton( "Polygon"  );
        gbcPanel0.gridx = 16;
        gbcPanel0.gridy = 0;
        gbcPanel0.gridwidth = 4;
        gbcPanel0.gridheight = 1;
        gbcPanel0.fill = GridBagConstraints.BOTH;
        gbcPanel0.weightx = 1;
        gbcPanel0.weighty = 0;
        gbcPanel0.anchor = GridBagConstraints.NORTH;
        gbPanel0.setConstraints( btPolygonBtn, gbcPanel0 );
        pnPanel0.add( btPolygonBtn );

        String []dataColourCmbo = { "WHITE", "BLACK", "RED", "BLUE", "YELLOW" };
        cmbColourCmbo = new JComboBox( dataColourCmbo );
        gbcPanel0.gridx = 20;
        gbcPanel0.gridy = 0;
        gbcPanel0.gridwidth = 4;
        gbcPanel0.gridheight = 1;
        gbcPanel0.fill = GridBagConstraints.BOTH;
        gbcPanel0.weightx = 1;
        gbcPanel0.weighty = 0;
        gbcPanel0.anchor = GridBagConstraints.NORTH;
        gbPanel0.setConstraints( cmbColourCmbo, gbcPanel0 );
        pnPanel0.add( cmbColourCmbo );

        tfHexText = new JTextField( );
        gbcPanel0.gridx = 24;
        gbcPanel0.gridy = 0;
        gbcPanel0.gridwidth = 4;
        gbcPanel0.gridheight = 1;
        gbcPanel0.fill = GridBagConstraints.BOTH;
        gbcPanel0.weightx = 1;
        gbcPanel0.weighty = 0;
        gbcPanel0.anchor = GridBagConstraints.NORTH;
        gbPanel0.setConstraints( tfHexText, gbcPanel0 );
        pnPanel0.add( tfHexText );

        pnCanvasPanel = new JPanel();
        pnCanvasPanel.setBorder( BorderFactory.createTitledBorder( "Canvas" ) );
        GridBagLayout gbCanvasPanel = new GridBagLayout();
        GridBagConstraints gbcCanvasPanel = new GridBagConstraints();
        pnCanvasPanel.setLayout( gbCanvasPanel );
        gbcPanel0.gridx = 0;
        gbcPanel0.gridy = 1;
        gbcPanel0.gridwidth = 28;
        gbcPanel0.gridheight = 500;
        gbcPanel0.fill = GridBagConstraints.BOTH;
        gbcPanel0.weightx = 1;
        gbcPanel0.weighty = 0;
        gbcPanel0.anchor = GridBagConstraints.NORTH;
        gbPanel0.setConstraints( pnCanvasPanel, gbcPanel0 );
        pnCanvasPanel.setPreferredSize(new Dimension(640,480));
        pnCanvasPanel.addMouseListener(new MouseLocator());
        pnPanel0.add( pnCanvasPanel );



        setDefaultCloseOperation( EXIT_ON_CLOSE );

        setContentPane( pnPanel0 );
        pack();
        setVisible( true );
    }

    public class MouseLocator implements MouseListener {
        public void mouseClicked(MouseEvent e) {
            clicks = clicks+1;
            if ((clicks % 2) != 0) {
                x1 = e.getXOnScreen();
                y1 = e.getYOnScreen();
            }
            else {
                x2 = e.getXOnScreen();
                y2 = e.getYOnScreen();
                Painting p = new Painting();
                jf = p.coordinate(x1,x2,y1,y2);
                pnCanvasPanel.add(jf);

            }
            System.out.println(x1);
            System.out.println(x2);
            System.out.println(y1);
            System.out.println(y2);
        }

        public void mousePressed(MouseEvent e) {
//            System.out.println(e);
        }

        public void mouseReleased(MouseEvent e) {
//            System.out.println(e);
        }

        public void mouseEntered(MouseEvent e) {
//            System.out.println(e);
        }

        public void mouseExited(MouseEvent e) {
//            System.out.println(e);
        }
    }
}
